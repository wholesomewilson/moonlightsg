function onInstall(t){console.log("[Serviceworker]","Installing!",t),t.waitUntil(caches.open(CACHE_NAME).then(function(t){return t.addAll(["","/assets/application-5f29cae51427663dd5d63c42ac44708cfd42e760d0ed24739c510247c3b5498a.css","/offline.html"])}))}function onActivate(t){console.log("[Serviceworker]","Activating!",t),t.waitUntil(caches.keys().then(function(t){return Promise.all(t.filter(function(t){return 0!==t.indexOf(CACHE_VERSION)}).map(function(t){return caches["delete"](t)}))}))}function onFetch(t){t.respondWith(fetch(t.request)["catch"](function(){return caches.match(t.request).then(function(e){return e||("navigate"===t.request.mode||"GET"===t.request.method&&t.request.headers.get("accept").includes("text/html")?(console.log("[Serviceworker]","Fetching offline content",t),caches.match("/offline.html")):void 0)})}))}var CACHE_VERSION="v1",CACHE_NAME=CACHE_VERSION+":sw-cache-";self.addEventListener("push",t=>{let e=t.data.json().title,n=t.data.json().body,i=t.data.json().data,o="hoote-push-notifications",a="/assets/send.png",c=!0;t.waitUntil(self.registration.showNotification(e,{body:n,icon:a,tag:o,data:i,renotify:c}))}),self.addEventListener("notificationclick",function(t){t.notification.close(),console.log(t.notification);let e=Promise.resolve();t.notification.data&&t.notification.data.url&&(e=clients.openWindow(t.notification.data.url)),t.waitUntil(Promise.all([e,self.analytics.trackEvent("notification-click")]))}),self.addEventListener("install",onInstall),self.addEventListener("activate",onActivate),self.addEventListener("fetch",onFetch);